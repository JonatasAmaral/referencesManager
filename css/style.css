@import "variables.css";

/* Normalize elements (simple way) */
* {
  padding: 0;
  margin: 0;
  border: none;
  outline: none;
  box-sizing: border-box;
}
html, body {
  overflow: hidden;
}

/*scroll bar */
/*::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}
::-webkit-scrollbar-track {
  border-radius: 6px;
}
::-webkit-scrollbar-thumb {
  background: rgba(0,0,0,0.3);
}
::-webkit-scrollbar-thumb:hover {
}
::-webkit-scrollbar-thumb:window-inactive {
	background: rgba(0,0,0,0.1);
}*/

/*::selection {
  background: var(--color-lighten);
}*/

/* Header Style */
header {
  background: var(--color-dark);
  position: sticky;
  height: 80px;
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  z-index: 2;
}
header div {
  margin: auto;
  text-align: center;
}
header div > * {
  width: 100%;
  text-align: center;
  color: white;
  text-shadow: 4px 4px 2px rgba(0, 0, 0, 0.5);
}
header #projetcName {
  font-family: var(--projectFont);
  font-weight: bold;
  font-size: 2.25em;
}
header p {
  font-family: var(--subProjectFont);
  text-transform: lowercase;
  font-size: 0.95em;
  text-shadow: 2px 2px 2px rgba(0, 0, 0, 0.4);
}

/* universal Tags style */
.tag {
  font-family: var(--tagsFont);
  font-size: 1.25em;
  background: var(--color-darken-0_7);
  color: white;
  padding: 8px;
  margin: 5px 8px;
  border-radius: 10px;
  text-align: center;
  transition: background 0.5s ease;
}
.tag:hover {
  background: var(--color-darken);
}
.tag.tag-small {
  font-size: 0.9em;
  padding: 4px 5px;
  margin: 4px 5px;
  border-radius: 6px;
}

/* Filter aside style */
#filtersTrigger {
  display: none;
}
#filterPanel {
  position: fixed;
  width: 80%;
  height: calc(100vh - 80px);
  left: calc(-80% - 6px);
  background: var(--color-base-0_8);
  box-shadow: 3px 0px 2px rgba(0, 0, 0, 0.2);
  padding: 10px 15px;
  z-index: 1;

  transition: left 0.5s ease-in-out;
  transition-delay: 0.10s;
}
#filtersTrigger:checked + #filterPanel {
  left: 0;
}

#filter {
  padding: 10px 4px;
  max-height: 40%;
  overflow: auto;
  background: rgba(225,225,225,1);
  box-shadow: inset 1px 2px 2px rgba(0,0,0,0.3), inset -2px -2px 4px rgba(0,0,0,0.15);
}
#filter .tag{
  box-shadow: 2px 3px 2px rgba(0,0,0,0.2), inset -1px -2px 3px rgba(0,0,0,0.3), inset 2px 2px 2px rgba(255,255,255,0.2);
}
#addTag {
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 10px;
  margin-top: 10px;
  background: #bbb;
  color: #333;
  font-size: 1.4em;
  border-radius: 5px;
  box-shadow: inset -1px -2px 3px rgba(0,0,0,0.1),  inset 2px 3px 5px rgba(255,255,255,0.3);
  text-shadow: 1px 2px 5px rgba(0,0,0,0.5);
}
#addTag:hover, #addTag:focus {
  background: #ccc;
}
#addTag:active {
  background: #999;
  color: #222;
  box-shadow: inset 2px 3px 3px rgba(0,0,0,0.1), inset -1px -2px 5px rgba(255,255,255,0.3);
  text-shadow: none;
}

.tagsList {
  display: flex;
  /*flex-wrap: wrap;*/
  overflow: auto;
}

/* Filter button style */
.tagsIcon {
  background: var(--color-base);
  color: #333;
  display: flex;
  align-items: center;
  justify-content: center;
}
label[for="filtersTrigger"] {
  position: fixed;
  left: 20px;
  bottom: 20px;
  width: 80px;
  height: 80px;
  border-radius: 50%;
  z-index: 2;
  transition: left 0.5s linear 0.05s, background 0.3s ease;

  cursor: pointer;
}
label[for="filtersTrigger"] .fa {
  font-size: 2.5em;
}
#filtersTrigger:checked + #filterPanel + label[for="filtersTrigger"] {
  background: var(--color-dark);
  left: calc(100vw - 100px);
  transition: left 0.5s linear 0.2s, background 0.3s ease;
}
#filtersTrigger:checked + #filterPanel + label[for="filtersTrigger"] .fa {
  color: #ccc;
}

label[for="filtersTrigger"]:hover {
  background: var(--color-darken) !important;
  color: #fff !important;
}
/* Page Style */
#references {
  padding: 40px 20px 0;
  height: calc(100vh - 80px);
  overflow: auto;
}

  /* -- reference's information style --  */
#references div.reference {
  padding-bottom: 20px;
  border-bottom: 2px solid var(--color-darken);
  margin-bottom: 50px;
}
#references > .reference, #references > img, #references > video {
  margin-bottom: 50px;
}
#references > *:last-child {
  padding-bottom: 0;
  border: 0;
  margin-bottom: 120px;
}
#references img, #references video{
  width: 100%;
  border: 1px solid var(--color-light) !important;
  padding: 0 !important;
}
.referenceInfo {
  padding: 5px 10px 10px;
  position: relative;
}
div.reference:not(:hover){
  padding: 0 !important;
  border: 0 !important;
}
div.reference:not(:hover) > .referenceInfo{
  display: none;
}
.referenceInfo .tittle, .referenceInfo p {
  font-family: var(--textFont);
  text-align: center;
}
.referenceInfo p {
  margin-top: 10px;
  font-size: 0.9em;
  text-align: left;
}
.referenceTags {
  margin-top: 10px;
  display: flex;
}

.referenceTags > .fa {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0 5px;
  background: var(--color-base);
  color: #333;
  border-bottom-left-radius: 7px;
  border-top-left-radius: 7px;
  padding: 10px;
}
.referenceTags .tagsList {
  flex-grow: 1;
  background: #ccc;
  padding: 5px 10px;
  border-bottom-right-radius: 7px;
  border-top-right-radius: 7px;
  position: relative;
}

/* fade tags out of box */
.referenceTags::after{
  content:'';
  height: 25%;
  width: 15px;
  right: 10px;
  position: absolute;
  background:linear-gradient( to right, transparent, #ccc 80%);
  border-bottom-right-radius: 7px;
  border-top-right-radius: 7px;
  transition: opacity 0.5s ease-in-out;
}
.referenceTags:hover:after{
  opacity: 0;
}
/* </fade tags out of box*/
.referenceTags .tag.tag-small {
  transition: transform 0.2s linear;
}
.referenceTags .tag.tag-small:hover {
  transform: translateY(-2px);
}
.referenceTags .tag:last-child::after { /* fix "right padding" on scrollable tags list */
  content: ".";
  position: absolute;
  width: 20px;
  opacity: 0;
}

/* bounce animation for tags menu */
@keyframes bounce-in {
  0% {
    transform: translateX(0);
  }
  30% {
    transform: translateX(-10px);
  }
  60% {
    transform: translateX(0px);
  }
  90% {
    transform: translateX(-5px);
  }
  100% {
    transform: translateX(0);
  }
}

@keyframes bounce-out {
  0% {
    transform: translateX(0);
  }
  30% {
    transform: translateX(10px);
  }
  60% {
    transform: translateX(0px);
  }
  90% {
    transform: translateX(5px);
  }
  100% {
    transform: translateX(0);
  }
}

#filtersTrigger:checked + #filterPanel {
  animation-name: bounce-in;
  animation-duration: 0.4s;
  animation-delay: 0.5s;
  animation-play-state: running;
}
#filterPanel {
  animation-name: bounce-out;
  animation-duration: 0.4s;
  animation-delay: 0.5s;
}

#filterPanel + label[for="filtersTrigger"] {
  animation-name: bounce-out;
  animation-duration: 0.4s;
  animation-delay: 0.5s;
}
#filtersTrigger:checked + #filterPanel + label[for="filtersTrigger"] {
  animation-name: bounce-in;
  animation-duration: 0.4s;
  animation-delay: 0.7s;
  animation-play-state: running;
}

#filtersTrigger[data-pristine] + #filterPanel, #filtersTrigger[data-pristine] + #filterPanel + .tagsIcon{
  animation-play-state: paused !important;
}
/* </ bounce animation for tags menu */
@supports (display: inline-grid) {
  /*body {
    background: blue;
  }*/
}


/* # "demi-mobile" devices # */

@media (min-width: 600px) {
  #page {
    display: grid;
    grid-template-columns: 35% 1fr;
  }
  #filterPanel {
    background: var(--color-base);
    position: initial;
    width: 100%;
    animation-play-state: paused;
  }
  label[for="filtersTrigger"] {
    display: none;
  }
}
@media (min-width: 1000px) {
  #page {
    grid-template-columns: 25% auto;
  }
  #references {
    display: grid;
    grid-template-columns: repeat(2, calc(50% - 10px));
    grid-gap: 20px;
  }
}
@media (min-width: 1400px) {
  #page {
    grid-template-columns: 20% auto;
  }
  #references {
    grid-template-columns: repeat(3, calc(33.3333% - 13.3333px ));
    grid-gap: 20px;
  }
}
@media (min-width: 2000px) {
  #page {
    grid-template-columns: 17% auto;
  }
  #references {
    grid-template-columns: repeat(4, calc(25% - 15px ));
    grid-gap: 20px;
  }
}
@media (min-width: 2300px) {
  body {
    background: linear-gradient(to right, var(--color-base) 45%, white 55%)
  }
  #page {
    background: white;
    grid-template: 15% 1fr min-max(50%-75%);
    grid-template-areas: "sideBar gap content";
    max-width: 2300px;
    margin-left: auto;
    margin-right: auto;
  }
  #filterPanel {
    grid-area: "sideBar"
  }
  #references {
      grid-area: "content"
  }
}
